
trigger:
- master
   
strategy:
  matrix:
    linux: 
      operatingSystem: 'ubuntu latest'
    mac:
      operatingSystem: 'macos latest'
pool:
  vmImage: $(operatingSystem)
steps:
      - bash: echo Build firstjob 
      - bash: echo $(pipelineLevelVariable)
      - bash: echo $(SYSTEM_ACCESSTOKEN)
      - bash: echo $(Agent.BuildDirectory)
      - bash: echo $(Agent.ContainerMapping)
      - bash: echo $(Agent.HomeDirectory)
      - bash: echo $(Agent.Id)
      - bash: echo $(Agent.JobName)
      - bash: echo $(Agent.JobStatus)
      - bash: echo $(Agent.MachineName)
      - bash: echo $(Agent.Name)
      - bash: echo $(Agent.OS)
      - bash: echo $(Agent.OSArchitecture)
      - bash: echo $(Agent.TempDirectory)
      - bash: echo $(Agent.ToolsDirectory)
      - bash: echo $(Agent.WorkFolder)
      - bash: echo $(System.DefaultWorkingDirectory)
      - bash: echo $(Build.ArtifactStagingDirectory)
      - bash: echo ls -R $(System.DefaultWorkingDirectory)
      - bash: java -version
      - bash: git --version
      - bash: head --version
      - bash: node --version
      - bash: docker --version
      - bash: mvn --version
      - bash: ansible --version
      - bash: python3 --version
      - bash: ls -R $(Build.ArtifactStagingDirectory)
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: |
            **/*.yml
            **/*.tf
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - bash: ls -R $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'


    



#   - job: secondjob
#     steps:
#       - bash: echo Build secondjob 


# - stage: pro
#   pool:

#   variables: 
#     environment: prod
#   dependsOn:
#   - Build

#   jobs:
#   - job: firstjob
#     steps:
#       - bash: echo $(environment) firstjob 
 
#   - job: secondjob
#     steps:
#       - bash: echo echo $(environment) secondjob   


